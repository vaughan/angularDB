d- sql-repeat
- ui-grid
  d- add ui-grid
  d- modify column widths
  - edit data
    d- trap editting events
    d- trap row-edit event
    ?- alter row-edit feature so it is activated upon switching rows rather than after 2 second interval without editing
      ?- event changeRow(isChanged, row[field]['oldValue'|'newValue']) -> focus moves to a new row or away from the grid
    l- focus on top left cell by default
    l- changes to grid behavior
      ?- enter key to lanuch editor
      l- when in editor left and right arrow keys allow moving to edit text
      ?- when exiting editor with enter key, remain in same cell but exit editor
    d- communicate with server to alter data
    d- add new rows
      d- mechanism for visually adding new row
        d- add empty row to bottom
      d- enable saveRow() to deal with inserting new rows
    - show behaviour with icons in recordselector
      d- insert recordselector
        R: row header column
      d- add icons to recordSelector via template
      - hide/show icons according to row state (ie. new record? current record? selected record? record being editted?)
        - why does the gridApi.cellnav.navigate event not return anything related to the row?  How can I debug this?  I can't find the info in batarang
        - is there any way I can determine these properties from css (ie. newRecord, activeRecord, selectedRecord, editMode)?
        - is there any way I can obtain the dom object of the cell from the cellNav.navigate event in order to set it's class?
        - how does the cellNav feature change highlight the currently active cell?
          - could I use the same mechanism to highlight the currently active row?
      - put an ng-click in the rowHeader for highlighting the row
        - adding ng-click via cellTemplate in gridApi.addRowHeaderColumn() is not compiled. onClick works (predictably)
      - put an ng-hide in the rowHeader for showing the newRecord icon
      - delete records
  - tableDesign view
  - add checkboxes and drop-down textboxes to column types to enable boolean fields and lookup fields with row-sources
  - query design view (QBE style)
- node-webkit
- testing
- dbObjects treeview
- tab control for viewing different dbObjects at the same time
- late-loading?
- other types of dbObjects
  - query
    - sql mode
    - design mode: use ng-grid
  - form
    - html mode
    - jade mode
    - html designer
  - code
    - use tern for code completion and hints
  - report
    - use sql-repeat
- tableDesign view

Q: can I create a directive that contains sql? R:yes!
  Q: sql.html: why is attr['sql-repeat'] null? how do I get the text value of sql-repeat?
  Q: sql.html: how can I transform the tr tag the directive is called on into an ng-repeat without messing with the tr's contents?
     x- template seems to overwrite everything
     x- the very fact of calling the directive on the tr seems to erase it's contents
     no: it wasn't over-writing anything the {{}} expressions evaluated to null
  comment: I find the Angular method API calls to be unclear. ie. the format for API calls that provide dependancy injection such as for 
    registering controllers, services and directives.  I presume it the allowed arguments are (id, [dependency1, dependency2, ... , function())
    where id is a string identifier of the service, directive or controller and it is followed by an array the final member of which is the
    constructor of the service, directive or controller and other 
  Q: how can implicit references to services infer what they are based on their variable name?  Is it actually possible in javascript to detect the
    string value of a function paramater in it's definition and not only it's order in the parameter list?
    R: yes this is possible using the «arguments» : it's just a non-typical way of thinking of function definitions that throws me for a loop   
Q: ui grid
- I notice in the docs there is stable and non-stable: is there a stable version available (ie. from bowser?)
- colDef.type = number, date ... this appears to change the control: spinner for numbers
- why does disabling angular-touch.js cause error: 
